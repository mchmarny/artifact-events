steps:

  # If the image is not passed by digest, we need to resolve it to a digest
  - id: config
    name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: /bin/bash
    args:
    - -c
    - |-
      echo "processing ${_DIGEST}"
      if [[ "${_DIGEST}" != *"@"* ]];then
        echo "ERROR: image ${_DIGEST} doesn't have a digest"
        exit 1
      fi
      echo $(echo ${_DIGEST} | cut -d: -f2) > sha.txt

  # snyk
  - id: scan-snyk
    name: docker.io/snyk/snyk:docker
    waitFor:
    - config
    allowExitCodes: [0, 1]
    args: ['snyk', 'container', 'test', '--app-vulns', '--json-file-output=snyk.json', '${_DIGEST}']
    env:
    - 'SNYK_TOKEN=${_SNYK_TOKEN}'

  - id: save-snyk
    name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: /bin/bash
    waitFor:
    - config
    - scan-snyk
    args:
    - -c
    - |-
      uri=gs://${_BUCKET}/$(cat sha.txt)-snyk.json
      gcloud storage cp snyk.json $uri
      gcloud pubsub topics publish image-scans --message=${_DIGEST} --attribute="file=$uri"

  # grype
  - id: scan-grype
    name: docker.io/anchore/grype
    waitFor:
    - config
    args: ['-s', 'AllLayers', '-o', 'json', '--file', 'grype.json', '${_DIGEST}']

  - id: save-grype
    name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: /bin/bash
    waitFor:
    - config
    - scan-grype
    args:
    - -c
    - |-
      uri=gs://${_BUCKET}/$(cat sha.txt)-grype.json
      gcloud storage cp grype.json $uri
      gcloud pubsub topics publish image-scans --message=${_DIGEST} --attribute="file=$uri"

  # trivy
  - id: scan-trivy
    name: docker.io/aquasec/trivy
    waitFor:
    - config
    args: ['image', '--format', 'json', '--scanners', 'vuln', '--output', 'trivy.json', '${_DIGEST}']

  - id: save-trivy
    name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: /bin/bash
    waitFor:
    - config
    - scan-trivy
    args:
    - -c
    - |-
      uri=gs://${_BUCKET}/$(cat sha.txt)-trivy.json
      gcloud storage cp trivy.json $uri
      gcloud pubsub topics publish image-scans --message=${_DIGEST} --attribute="file=$uri"
